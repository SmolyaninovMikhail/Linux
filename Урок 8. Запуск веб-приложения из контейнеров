Задание:
Установить в виртуальную машину или VDS Docker, настроить набор контейнеров через docker compose по инструкции по ссылке: https://www.digitalocean.com/community/tutorials/how-to-install-wordpress-with-docker-compose-ru. Часть с настройкой certbot и HTTPS опустить, если у вас нет настоящего домена и белого IP.
* Запустить два контейнера, связанные одной сетью (используя документацию). Первый контейнер БД (например, образ mariadb:10.8), второй контейнер — phpmyadmin. Получить доступ к БД в первом контейнере через второй контейнер (веб-интерфейс phpmyadmin).
* Собрать собственный образ для hub.docker.com. В качестве зачета по нему предоставить ссылку на образ.

Результат:
Текст команд, которые применялись при выполнении задания. При наличии: часть конфигурационных файлов, которые решают задачу. Скриншоты результата запуска контейнеров (веб-интерфейс). Присылаем в формате текстового документа: задание и команды для решения (без вывода). Формат — PDF (один файл на все задания).

root@rucheyshestvo-VirtualBox:/home/rucheyshestvo# sudo apt install docker.io
root@rucheyshestvo-VirtualBox:/home/rucheyshestvo# sudo apt install docker-compose
root@rucheyshestvo-VirtualBox:/home/rucheyshestvo# mkdir wordpress && cd wordpress
root@rucheyshestvo-VirtualBox:~/wordpress$ mkdir nginx-conf
root@rucheyshestvo-VirtualBox:~/wordpress$ cd nginx-conf
root@rucheyshestvo-VirtualBox:~/wordpress/nginx-conf$ cd ..
root@rucheyshestvo-VirtualBox:~/wordpress$ nano nginx-conf/nginx.conf

# server {
    listen 80;
    listen [::]:80;

    server_name example.com www.example.com;

    index index.php index.html index.htm;

    root /var/www/html;

    location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/html;
    }

    location / {
            try_files $uri $uri/ /index.php$is_args$args;
    }

    location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass wordpress:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    location ~ /\.ht {
            deny all;
    }

    location = /favicon.ico {
            log_not_found off; access_log off;
    }
    location = /robots.txt {
            log_not_found off; access_log off; allow all;
    }
    location ~* \.(css|gif|ico|jpeg|jpg|js|png)$ {
            expires max;
            log_not_found off;
    }
}

root@rucheyshestvo-VirtualBox:~/wordpress$ nano .env
# 
MYSQL_ROOT_PASSWORD=123456
MYSQL_USER=wordpressuser
MYSQL_PASSWORD=123456

root@rucheyshestvo-VirtualBox:~/wordpress$ nano .dockerignore
#
.env

root@rucheyshestvo-VirtualBox:~/wordpress$ tree -a
root@rucheyshestvo-VirtualBox:~/wordpress$ nano docker-compose.yml
#
version: '3'

services:
  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      - MYSQL_DATABASE=wordpress
    volumes:
      - dbdata:/var/lib/mysql
    command: '--default-authentication-plugin=mysql_native_password'
    networks:
      - app-network
      
...
  wordpress:
    depends_on:
      - db
    image: wordpress:6.1.1-php8.0-fpm-alpine
    container_name: wordpress
    restart: unless-stopped
    env_file: .env
    environment:
      - WORDPRESS_DB_HOST=db:3306
      - WORDPRESS_DB_USER=$MYSQL_USER
      - WORDPRESS_DB_PASSWORD=$MYSQL_PASSWORD
      - WORDPRESS_DB_NAME=wordpress
    volumes:
      - wordpress:/var/www/html
    networks:
      - app-network
      
...
  webserver:
    depends_on:
      - wordpress
    image: nginx:1.22.1-alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - wordpress:/var/www/html
      - ./nginx-conf:/etc/nginx/conf.d
    networks:
      - app-network
volumes:
  wordpress:
  dbdata:

networks:
  app-network:
    driver: bridge
        
root@rucheyshestvo-VirtualBox:~/wordpress$ sudo iptables -L
root@rucheyshestvo-VirtualBox:~/wordpress$ sudo iptables -L -t nat
root@rucheyshestvo-VirtualBox:~/wordpress$ sudo docker-compose up -d
root@rucheyshestvo-VirtualBox:~/wordpress$ sudo docker-compose down
root@rucheyshestvo-VirtualBox:~/wordpress$ docker-compose ps
